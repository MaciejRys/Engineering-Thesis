﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace ConvertCSV
{
    public partial class ModelANG
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"delta", @"delta"),new InputOutputColumnPair(@"theta", @"theta"),new InputOutputColumnPair(@"lowAlpha", @"lowAlpha"),new InputOutputColumnPair(@"highAlpha", @"highAlpha"),new InputOutputColumnPair(@"lowBeta", @"lowBeta"),new InputOutputColumnPair(@"highBeta", @"highBeta"),new InputOutputColumnPair(@"lowGamma", @"lowGamma"),new InputOutputColumnPair(@"highGamma", @"highGamma")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"delta",@"theta",@"lowAlpha",@"highAlpha",@"lowBeta",@"highBeta",@"lowGamma",@"highGamma"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(@"label", @"label"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=12495,MinimumExampleCountPerLeaf=4,NumberOfTrees=12495,MaximumBinCountPerFeature=8,LearningRate=4.58316595638992E-06F,FeatureFraction=1F,LabelColumnName=@"label",FeatureColumnName=@"Features"}), labelColumnName: @"label"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(@"PredictedLabel", @"PredictedLabel"));

            return pipeline;
        }
    }
}
